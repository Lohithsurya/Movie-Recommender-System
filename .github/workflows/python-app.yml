  # df This workflow will install Python dependencies, run tests and lint widsth a single version of Python
  # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
  
  name: Python application
  
  on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]
  
  permissions:
    contents: read
  
  jobs:
    build:
  
      runs-on: ${{matrix.os}}
      strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macOS-latest]
  
      steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Unzip Dataset
        run: |
          unzip movies.zip -d ./movies
        working-directory: ./  # Adjust if the zip file is in a subdirectory
      - name: Verify Dataset Files
        run: |
          ls -R ./movies
      - name: Run Movie Recommender Script
        run: |
          python movie_recommender_system.py
    
      - name: Build Docker Image Locally
        run: |
          docker build -t my-movie-recommender .

      - name: Run Docker Image Locally
        run: |
          docker run -d -p 5000:5000 my-movie-recommender
        # Optionally, you can run tests or check logs here

    # To stop the container, you can add a step to stop it after testing
      - name: Stop Docker Container
        run: |
          docker ps -q --filter "ancestor=my-movie-recommender" | xargs docker stop
        
